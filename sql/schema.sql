DROP TABLE IF EXISTS Likes;
DROP TABLE IF EXISTS Comments;
DROP TABLE IF EXISTS PostCategories;
DROP TABLE IF EXISTS Categories;
DROP TABLE IF EXISTS Posts;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Tokens;

CREATE TABLE Users (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  Login VARCHAR(50) UNIQUE NOT NULL,
  Password VARCHAR(255) NOT NULL,
  Full_Name VARCHAR(100) NOT NULL,
  Email VARCHAR(100) UNIQUE NOT NULL,
  Avatar VARCHAR(255),
  Rating INT DEFAULT 0,
  Role ENUM('user','admin') DEFAULT 'user',
  Is_Activated BOOLEAN DEFAULT FALSE,
  Reset_Token VARCHAR(255),
  Reset_Token_Expire DATETIME,
  Created_At DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Posts (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  Author_Id INT NOT NULL,
  Title VARCHAR(255) NOT NULL,
  Content TEXT NOT NULL,
  Publish_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
  Status ENUM('active','inactive') DEFAULT 'active',
  FOREIGN KEY (Author_Id) REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE Categories (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  Title VARCHAR(100) UNIQUE NOT NULL,
  Description TEXT
);

CREATE TABLE PostCategories (
  Post_Id INT NOT NULL,
  Category_Id INT NOT NULL,
  PRIMARY KEY (Post_Id, Category_Id),
  FOREIGN KEY (Post_Id) REFERENCES Posts(Id) ON DELETE CASCADE,
  FOREIGN KEY (Category_Id) REFERENCES Categories(Id) ON DELETE CASCADE
);

CREATE TABLE Comments (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  Post_Id INT NOT NULL,
  Author_Id INT NOT NULL,
  Content TEXT NOT NULL,
  Publish_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
  Status ENUM('active','inactive') DEFAULT 'active',
  FOREIGN KEY (Post_Id) REFERENCES Posts(Id) ON DELETE CASCADE,
  FOREIGN KEY (Author_Id) REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE Likes (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  Author_Id INT NOT NULL,
  Target_Id INT NOT NULL,
  Target_Type ENUM('post','comment') NOT NULL,
  Type ENUM('like','dislike') NOT NULL,
  Publish_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY Uniq_Like (Author_Id, Target_Id, Target_Type),
  FOREIGN KEY (Author_Id) REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE Tokens (
  Id INT AUTO_INCREMENT PRIMARY KEY,
  RefreshToken VARCHAR(255) NOT NULL,
  UserId INT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (UserId) REFERENCES Users(Id) ON DELETE CASCADE
);
